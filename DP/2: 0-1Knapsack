https://practice.geeksforgeeks.org/problems/0-1-knapsack-problem0945/1

int getans(int w , int idx , int wt[] , int val[] , int n ,  vector<vector<int>>&memo){
        if(idx<0) return 0;
        if(memo[idx][w] != -1) return memo[idx][w];
        int a = 0 ;
        if(w-wt[idx]>=0){
            a = val[idx]+getans(w-wt[idx],idx-1,wt,val,n,memo);
        }
        a = max(a,getans(w,idx-1,wt,val,n,memo));
        return memo[idx][w] = a;
    }
    
    
    int knapSack(int W, int wt[], int val[], int n) 
    { 
       // Your code here
       vector<vector<int>> memo(n, vector<int>(W+1,-1));
       return getans(W,n-1,wt,val,n-1,memo);
    }
